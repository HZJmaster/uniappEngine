{
  // 该配置项主要用于指示此.eslintrc文件是Eslint在项目内使用的根级别文件，并且 ESLint 不应在该目录之外搜索配置文件
  "root": true,
  // 默认情况下，Eslint使用其内置的 Espree 解析器
  // 该配置项告诉eslint我们拓展了哪些指定的配置集，其中
  // eslint:recommended ：该配置集是 ESLint 内置的“推荐”，它打开一组小的、合理的规则，用于检查众所周知的最佳实践
  // prettier（即eslint-config-prettier）关闭所有可能干扰 Prettier 规则的 ESLint 规则，确保将其放在最后，这样它有机会覆盖其他配置集
  "extends": [
    "plugin:vue/vue3-essential",
    "eslint:recommended",
    "@vue/eslint-config-typescript",
    "@vue/eslint-config-prettier",
    "prettier"
  ],
  "globals": {
    "uni": true,
    "wx": true,
    "WechatMiniprogram": true,
    "getCurrentPages": true,
    "getApp": true,
    "UniApp": true,
    "UniHelper": true,
    "App": true,
    "Page": true,
    "Component": true,
    "AnyObject": true
  },
  // ESLint 允许你指定你想要支持的 JavaScript 语言选项
  // 你也可以设置 "latest" 来使用受支持的最新版本
  "parserOptions": {
    "ecmaVersion": "latest"
  },
  // 该配置项指示要加载的插件，这里
  // prettier插件（即eslint-plugin-prettier）将 Prettier 规则转换为 ESLint 规则
  "plugins": ["prettier"],
  "rules": {
    "prettier/prettier": "error", // 打开prettier插件提供的规则，该插件从ESlint内运行prettier
    "vue/multi-word-component-names": "off",
    "vue/no-setup-props-destructure": "off",
    "vue/no-deprecated-html-element-is": "off",
    "@typescript-eslint/no-unused-vars": "off",
    // 关闭这两个ESlint核心规则，这两个规则和prettier插件一起使用会出现问题
    "arrow-body-style": "off",
    "prefer-arrow-callback": "off"
  }
}
